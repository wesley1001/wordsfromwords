
When the user taps the 'Sign in with Facebook' button on the LoginChoicesView:

    LoginChoicesView notifies LoginChoicesModel

    LoginChoicesModel invokes the React Native FBSDK, which prompts the user to login via Facebook
    
TODO and WYLO ....
    
    After successful login, LoginChoicesModel POSTs the user's fb_id and fb_token to /api/facebook/validate

    /api/facebook/validate passes the fb_token to the Facebook Graph API and gets the user_id back...
    
        https://graph.facebook.com/debug_token?input_token=USER_TOKEN&access_token=APP_ID|APP_SECRET
        
            ...which returns this when the user has authenticated via your app:
        
                {
                   "data": {
                      "app_id": "1720156654870532",
                      "application": "Words From Words",
                      "expires_at": 1459742153,
                                    1454590520
                      "is_valid": true,
                      "issued_at": 1454558153,
                      "metadata": {
                         "auth_type": "rerequest",
                         "sso": "ios"
                      },
                      "scopes": [
                         "public_profile"
                      ],
                      "user_id": "10153905045409771"
                   }
                }
            
            ...and, btw, since the times are in seconds, this little formula tells you how many days until the token expires (60 days in this case):
            
                (((expires_at - issued_at) / 60) / 60) / 24
            
            ...and here's how you can get the current epoch time in seconds from Postgres:
            
                SELECT round(extract(epoch from now())) AS current_time;
                 current_time     
                --------------
                  1454590520

    if (fb_id === user_id) {

        /api/facebook/validate looks up the uuid WHERE fb_token = fb_token

        if (uuid === null) {

            /api/facebook/validate generates a new uuid and INSERTs uuid, fb_id, fb_token

        } else {

            /api/facebook/validate UPDATEs fb_token WHERE uuid = uuid

        }

        /api/facebook/validate returns a 200 response (OK) with {uuid: uuid, token: fb_token}

        LoginChoicesModel sets uuid and token on GlobalModel

        LoginChoicesModel writes uuid and token via AsyncStorage

        LoginChoicesModel navigates (via replace) to GameListView

    } else {

        /api/facebook/validate returns a 400 response (bad request)

    }